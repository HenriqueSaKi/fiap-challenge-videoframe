version: '3'

services:
  localstack:
    image: localstack/localstack:latest
    ports:
      - "4510-4559:4510-4559"
      - '4563-4599:4563-4599'
      - "4566:4566"
      - "4568:4568"
      - "4571:4571"
    environment:
      - DEBUG=1
      - USE_SSL=0
      - PERSISTENCE=0
      - LS_LOG=debug
      - AWS_ACCESS_KEY_ID=fakeAccessKeyId
      - AWS_SECRET_ACCESS_KEY=fakeSecretAccessKey
      - SERVICES=${SERVICES-}
      - DOCKER_HOST=unix:///var/run/docker.sock
      - SKIP_SSL_CERT_DOWNLOAD=1
    volumes:
      - "${LOCALSTACK_VOLUME_DIR:-/tmp/localstack}:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./localstack/initaws:/etc/localstack/init/ready.d"
      - "./localstack/config:/var/run/config"
  mongo-express:
    image: mongo-express
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: renatogroffe
      ME_CONFIG_BASICAUTH_PASSWORD: MongoExpress2019!
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: MongoDB2019!
    links:
      - mongo
    networks:
      - mongo-compose-network
  mongo:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: MongoDB2019!
    ports:
      - "27017:27017"
    volumes:
      - /home/renatogroffe/Desenvolvimento/Docker/Volumes/MongoDB:/data/db
    networks:
      - mongo-compose-network
networks:
  mongo-compose-network:
    driver: bridge
